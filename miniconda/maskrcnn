#%Module3.1.6#####################################################################
##
# for Tcl script use only
set     version         3
set     tfversion         1.14
set     kerasversion     2.3.0

proc ModulesHelp { } {
        global version kerasversion tfversion 
        puts stderr "\tThis module loads miniconda$version for use with Keras $kerasversion TF $tfversion \n"

        puts stderr "\tminiconda - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh;  bash Miniconda3-latest-Linux-x86_64.sh "
        puts stderr "\tpip        - conda install pip cudatoolkit  cudnn  bazel==0.24.1 numpy                                                          "
        puts stderr "\ttensorflow - git clone https://github.com/tensorflow/tensorflow.git ; cd tensorflow ; git checkout r$tfversion ; ./configure    "
        puts stderr "\ttensorflow - bazel build --config=opt --config=cuda  //tensorflow/tools/pip_package:build_pip_package                           "
        puts stderr "\ttensorflow - pip install keras==$kerasversion nibabel                                                                           "
        puts stderr "\ttensorflow - conda install matplotlib jupyter notebook pandas scikit-learn scikit-image                                         "
        puts stderr "\ttheano     - conda install theano pygpu                                                                                         "
        puts stderr "\tconda list | grep tensor \n"
}

set     conda_dir        /opt/apps/miniconda/maskrcnn

module-whatis   'loads the miniconda $version, tf $tfversion, keras $kerasversion '

prepend-path   PATH             $conda_dir/bin


## scrgp3$ ./configure
## WARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command "bazel shutdown".
## You have bazel 0.24.1- (@non-git) installed.
## Please specify the location of python. [Default is /opt/apps/miniconda/maskrcnn/bin/python]:
## 
## 
## Found possible Python library paths:
##   /opt/apps/miniconda/maskrcnn/lib/python3.7/site-packages
## Please input the desired Python library path to use.  Default is [/opt/apps/miniconda/maskrcnn/lib/python3.7/site-packages]
## 
## Do you wish to build TensorFlow with XLA JIT support? [Y/n]:
## XLA JIT support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with OpenCL SYCL support? [y/N]:
## No OpenCL SYCL support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with ROCm support? [y/N]:
## No ROCm support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with CUDA support? [y/N]: y
## CUDA support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with TensorRT support? [y/N]:
## No TensorRT support will be enabled for TensorFlow.
## 
## Found CUDA 9.1 in:
##     /usr/local/cuda/lib64
##     /usr/local/cuda/include
## Found cuDNN 7 in:
##     /usr/local/cuda/lib64
##     /usr/local/cuda/include
## 
## 
## Please specify a list of comma-separated CUDA compute capabilities you want to build with.
## You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
## Please note that each additional compute capability significantly increases your build time and binary size, and that TensorFlow only supports compute capabilities >= 3.5 [Default is: 6.1]:
## 
## 
## Do you want to use clang as CUDA compiler? [y/N]:
## nvcc will be used as CUDA compiler.
## 
## Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:
## 
## 
## Do you wish to build TensorFlow with MPI support? [y/N]:
## No MPI support will be enabled for TensorFlow.
## 
## Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native -Wno-sign-compare]:
## 
## 
## Would you like to interactively configure ./WORKSPACE for Android builds? [y/N]:
## Not configuring the WORKSPACE for Android builds.
## 
## Preconfigured Bazel build configs. You can use any of the below by adding "--config=<>" to your build command. See .bazelrc for more details.
##         --config=mkl            # Build with MKL support.
##         --config=monolithic     # Config for mostly static monolithic build.
##         --config=gdr            # Build with GDR support.
##         --config=verbs          # Build with libverbs support.
##         --config=ngraph         # Build with Intel nGraph support.
##         --config=numa           # Build with NUMA support.
##         --config=dynamic_kernels        # (Experimental) Build kernels into separate shared objects.
## Preconfigured Bazel build configs to DISABLE default on features:
##         --config=noaws          # Disable AWS S3 filesystem support.
##         --config=nogcp          # Disable GCP support.
##         --config=nohdfs         # Disable HDFS support.
##         --config=noignite       # Disable Apache Ignite support.
##         --config=nokafka        # Disable Apache Kafka support.
##         --config=nonccl         # Disable NVIDIA NCCL support.
## Configuration finished
