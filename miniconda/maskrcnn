#%Module3.1.6#####################################################################
##
## scrgp3$ gcc -v
## Using built-in specs.
## COLLECT_GCC=gcc
## COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/6/lto-wrapper
## Target: x86_64-linux-gnu
## Configured with: ../src/configure -v --with-pkgversion='Ubuntu 6.4.0-17ubuntu1' --with-bugurl=file:///usr/share/doc/gcc-6/README.Bugs --enable-languages=c,ada,c++,go,d,fortran,objc,obj-c++ --prefix=/usr --with-as=/usr/bin/x86_64-linux-gnu-as --with-ld=/usr/bin/x86_64-linux-gnu-ld --program-suffix=-6 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
## Thread model: posix
## gcc version 6.4.0 20180424 (Ubuntu 6.4.0-17ubuntu1)
## scrgp3$ uname -a
## Linux scrgp3 4.15.0-20-generic #21-Ubuntu SMP Tue Apr 24 06:16:15 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
## scrgp3$ lsb_release -a
## No LSB modules are available.
## Distributor ID: Ubuntu
## Description:    Ubuntu 18.04 LTS
## Release:        18.04
## Codename:       bionic

# for Tcl script use only
set     version         3
set     bazelversion      0.15.0
set     tfversion         1.10
set     kerasversion     2.3.0
set     conda_dir        /opt/apps/miniconda/maskrcnn

#export TF_CUDA_PATHS=/opt/apps/miniconda/maskrcnn/
proc ModulesHelp { } {
        global version kerasversion tfversion  conda_dir bazelversion      
        puts stderr "\tThis module loads miniconda$version for use with Keras $kerasversion TF $tfversion \n"

        puts stderr "\tminiconda - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh;  bash Miniconda3-latest-Linux-x86_64.sh -p $conda_dir -b -s" 
        puts stderr "\tgcc        - sudo apt-get install gcc-4.8 g++-4.8                       " 
        puts stderr "\tpip        - conda install python=3.6.10  "
        puts stderr "\tcondaforge - conda config --add channels conda-forge ; conda config --set channel_priority strict "
        puts stderr "\tpip        - conda install pip cudatoolkit=9 cudatoolkit-dev=9 cudnn  bazel=$bazelversion numpy nccl=2.4.6.1 "
        puts stderr "\ttensorflow - git clone https://github.com/tensorflow/tensorflow.git ; cd tensorflow ; git checkout r$tfversion ; ./configure    "
        puts stderr "\ttensorflow - bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package                           "
        puts stderr "\ttensorflow - pip install keras==$kerasversion nibabel                                                                           "
        puts stderr "\ttensorflow - conda install matplotlib jupyter notebook pandas scikit-learn scikit-image                                         "
        puts stderr "\ttheano     - conda install theano pygpu                                                                                         "
        puts stderr "\tconda list | grep tensor \n"
}


module-whatis   'loads the miniconda $version, tf $tfversion, keras $kerasversion '

prepend-path   PATH             $conda_dir/bin

## scrgp3$ git diff
## diff --git a/.bazelrc b/.bazelrc
## index 9f09fdff97..c9beee8acb 100644
## --- a/.bazelrc
## +++ b/.bazelrc
## @@ -86,3 +86,4 @@ build --define=LIBDIR=$(PREFIX)/lib
##  build --define=INCLUDEDIR=$(PREFIX)/include
## 
##  # Do not commit the tf_configure.bazelrc line
## +import /opt/apps/miniconda/tensorflow/.tf_configure.bazelrc
## diff --git a/third_party/gpus/cuda_configure.bzl b/third_party/gpus/cuda_configure.bzl
## index 69f4599c16..85b7c46944 100644
## --- a/third_party/gpus/cuda_configure.bzl
## +++ b/third_party/gpus/cuda_configure.bzl
## @@ -60,6 +60,7 @@ CUDA_LIB_PATHS = [
##  # On most systems, the cupti library is not installed in the same directory as
##  # the other CUDA libraries but rather in a special extras/CUPTI directory.
##  CUPTI_HEADER_PATHS = [
## +    "pkgs/cudatoolkit-dev/extras/CUPTI/include/",
##      "extras/CUPTI/include/",
##      "include/cuda/CUPTI/",
##      "include/",


## scrgp3$ ./configure
## You have bazel 0.15.0- (@non-git) installed.
## Please specify the location of python. [Default is /opt/apps/miniconda/maskrcnn/bin/python]:
## 
## 
## Found possible Python library paths:
##   /opt/apps/miniconda/maskrcnn/lib/python3.7/site-packages
## Please input the desired Python library path to use.  Default is [/opt/apps/miniconda/maskrcnn/lib/python3.7/site-packages]
## 
## Do you wish to build TensorFlow with jemalloc as malloc support? [Y/n]:
## jemalloc as malloc support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: n
## No Google Cloud Platform support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with Hadoop File System support? [Y/n]: n
## No Hadoop File System support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with Amazon AWS Platform support? [Y/n]: n
## No Amazon AWS Platform support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: n
## No Apache Kafka Platform support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with XLA JIT support? [y/N]:
## No XLA JIT support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with GDR support? [y/N]:
## No GDR support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with VERBS support? [y/N]:
## No VERBS support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with OpenCL SYCL support? [y/N]:
## No OpenCL SYCL support will be enabled for TensorFlow.
## 
## Do you wish to build TensorFlow with CUDA support? [y/N]: y
## CUDA support will be enabled for TensorFlow.
## 
## Please specify the CUDA SDK version you want to use. [Leave empty to default to CUDA 9.0]: 9.2
## 
## 
## Please specify the location where CUDA 9.2 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /opt/apps/miniconda/maskrcnn
## 
## 
## Please specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]:
## 
## 
## Please specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /opt/apps/miniconda/maskrcnn]:
## 
## 
## Do you wish to build TensorFlow with TensorRT support? [y/N]:
## No TensorRT support will be enabled for TensorFlow.
## 
## Please specify the NCCL version you want to use. If NCCL 2.2 is not installed, then you can use version 1.3 that can be fetched automatically but it may have worse performance with multiple GPUs. [Default is 2.2]:
## 
## 
## Please specify the location where NCCL 2 library is installed. Refer to README.md for more details. [Default is /opt/apps/miniconda/maskrcnn]:
## 
## 
## Please specify a list of comma-separated Cuda compute capabilities you want to build with.
## You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
## Please note that each additional compute capability significantly increases your build time and binary size. [Default is: 3.5,7.0]
## 
## 
## Do you want to use clang as CUDA compiler? [y/N]:
## nvcc will be used as CUDA compiler.
## 
## Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: /usr/bin/gcc-4.8
## 
## 
## Do you wish to build TensorFlow with MPI support? [y/N]:
## No MPI support will be enabled for TensorFlow.
## 
## Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]:
## 
## 
## Would you like to interactively configure ./WORKSPACE for Android builds? [y/N]:
## Not configuring the WORKSPACE for Android builds.
## 
## Preconfigured Bazel build configs. You can use any of the below by adding "--config=<>" to your build command. See tools/bazel.rc for more details.
##         --config=mkl            # Build with MKL support.
##         --config=monolithic     # Config for mostly static monolithic build.
## Configuration finished
